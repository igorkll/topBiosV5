local a,b,c,d,e,component,error,xpcall,assert,f,checkArg,pairs,type,g,h=table.unpack,computer.pullSignal,table.insert,string.sub,table.concat,component,error,xpcall,assert,computer.shutdown,checkArg,pairs,type,table.unpack,debug.traceback;local function i(j)return tonumber(computer.getDeviceInfo()[j].width)or false end;local function k(l)local m=0;local n=nil;local o=false;while true do o=false;for j,p in component.list(l)do if l==p then local q=i(j)if not q then n=j elseif q>m then m=q;n=j;o=true;break end end end;if not o then return component.proxy(n or"")end end end;local r=k("eeprom")local s=r.address;local t=k("internet")local u=k("beep")local v=component.invoke;computer.setArchitecture=nil;local w={makeReadonly=false,get="",set={nil,"storage is readonly"},setData={nil,"storage is readonly"},getData="",getChecksum="",setLabel={nil,"storage is readonly"},getLabel=""}local function x(j,y,...)checkArg(1,j,"string")checkArg(2,y,"string")if j==r.address then for z,A in pairs(w)do if z==y then local B=type(A)if B=="table"then return g(A)elseif B=="function"then return A(...)else return A end end end;return v(j,y,...)else return v(j,y,...)end end;local function C()component.invoke=x end;local function D()component.invoke=v end;C()local E,F=false;computer.pullSignal=function(G)local H={b(G)}if not E and H[1]=="component_removed"and H[2]==s and H[3]=="eeprom"then f()end;return a(H)end;local function I(G)local J=computer.uptime()while computer.uptime()-J<G do computer.pullSignal(0)end end;local function K(L,M,N)if u then u.beep({[L]=M})if N then I(M)end else computer.beep(L,M)end end;local O;local function P(Q)if E or not O then return false end;if Q==0 then K(1600,0.05,true)K(1400,0.05,true)K(1400,0.05,true)K(1600,0.05)elseif Q==1 then K(1000,0.2)elseif Q==2 then K(1333,0.05,true)K(1333,0.05)elseif Q==3 then K(2000,0.01)end;return true end;local function R(S,T)local parts,U={},1;local V=1;while true do if V>#S then break end;local W=d(S,V,#T+V-1)if not parts[U]then parts[U]=""end;if W==T then U=U+1;V=V+#T else parts[U]=parts[U]..d(S,V,V)V=V+1 end end;if d(S,#S-(#T-1),#S)==T then c(parts,"")end;return parts end;local function X()F("writing to eeprom")P(2)end;local function Y()return v(s,"getData")end;local function Z(_)v(s,"setData",_)end;local function a0(a1)return R(Y(),"\n")[a1]or""end;local function a2(a1,a3,a4)if a0(a1)==a3 then return end;if not E and not a4 then X()end;if a3:find("\n")then error("\\n char")end;parts=R(Y(),"\n")for V=a1,1,-1 do if not parts[V]then parts[V]=""end end;parts[a1]=a3;Z(e(parts,"\n"))end;O=a0(11)~="0"local a5=k("gpu")local a6;local a7;local a8,a9,aa;local function ab()a5={}setmetatable(a5,{__index=function()error("gpu and screen required")end})end;if not a5 then ab()else if not component.proxy(a0(10))then local a6=k("screen")if a6 then a2(10,a6.address,true)end end;a6=a0(10)local ac=component.proxy(a6)if ac then a5.bind(a6)a8,a9=a5.getResolution()aa=a5.getDepth()a7=v(a6,"getKeyboards")[1]if ac.setPrecise then pcall(ac.setPrecise,false)end else a6=nil;ab()end end;local ad;if a6 then ad=a5.address end;local function ae()return aa~=1 end;local function af(ag,ah,ai)if not ah then ah=ag end;if aa~=1 then if aa==4 then return ah else return ag end else return ai and 0xFFFFFF or 0 end end;local function aj()a5.setForeground(a5.setBackground(a5.getForeground()))end;local function ak()a5.fill(1,1,a8,a9," ")end;local function al(am,an)a5.setBackground(am or 0xFFFFFF)a5.setForeground(an or 0)end;local function ao(am,an)al(am,an)ak()end;local function ap(aq,ar)local as=math.ceil(a8/2-unicode.len(aq)/2)a5.set(as,ar,aq)return as,as+unicode.len(aq)-1 end;local function at(au,av,Q)local aw=Q or 1;local ar=a9//2-#av//2-1;if ar<0 then ar=0 end;while true do ao()local ax=aw//a9*a9;local ay=ar;if ax==0 then if not ae()then aj()end;ap(au,1+ay)if not ae()then aj()end else ay=0 end;al(nil,af(0x888888,0xAAAAAA,false))for V=1,#av do local az=V+1+ay-ax;if az>=1 and az<=a9 then if a7 and aw==V then aj()end;ap(av[V],az)if a7 and aw==V then aj()end end end::aA::local aB=false;local aC,aD,as,aE,aF=computer.pullSignal()if aC=="key_down"and aD==a7 then if aE==200 and aw>1 then aw=aw-1;aB=true end;if aE==208 and aw<#av then aw=aw+1;aB=true end;if aE==28 then P(3)return aw end elseif aC=="touch"and aD==a6 and aF==0 then aE=aE+ax-ay;aE=aE-1;if aE>=1 and aE<=#av then local aq=av[aE]local aG,aH=math.ceil(a8/2-unicode.len(aq)/2)aH=aG+unicode.len(aq)-1;if as>=aG and as<=aH then P(3)return aE end end elseif aC=="scroll"and aD==a6 then if aF==1 and aw>1 then aw=aw-1;aB=true end;if aF==-1 and aw<#av then aw=aw+1;aB=true end end;if not aB then goto aA else P(3)end end end;local function aI(au,av,aJ,aK,Q,aL)av[#av+1]="back"local Q=Q or 1;while true do local aM=au;if type(au)=="function"then aM=au()end;Q=at(aM,av,Q)if Q==#av then return end;local aN={}if aK and aK[Q]then aN=aK[Q]end;aJ[Q](table.unpack(aN))end end;local function aO(au,aP,aQ)if aP then return at(au,{"no","yes"},aQ and 2 or 1)==2 else return at(au,{"no","no","yes","no"},aQ and 3 or 1)==3 end end;local function aR()return a6 and(a7 or math.floor(computer.getDeviceInfo()[a6].width)~=1)end;local function aS(ar,aT)local S="press enter or touch to continue"if aT then ap(S,ar)else a5.set(1,ar,S)end;while true do local aC,aD,aU,aE=computer.pullSignal()if aC=="key_down"and aD==a7 then if aE==28 then break end elseif aC=="touch"and aD==a6 then break end end;P(3)end;function F(S,aV)if not a6 then return end;ao()ap(S,a9//2)if aV then I(aV)end end;local function aW(S)if not a6 then return end;if not aR()then F(S,1)return end;ao()ap(S,a9//2)aS(a9//2+1,true)end;local function aX(aq,aY)if not a7 then aW("keyboard is not found")return""end;local aZ=""local aT=a9//2;local function a_()ao()local aZ=aZ;if aY then aZ=string.rep("*",unicode.len(aZ))end;local b0=aq..": "..aZ.."_"ap(b0,aT)end;while true do a_()local aC,aD,W,aE=computer.pullSignal()if aC=="key_down"and aD==a7 then if aE==28 then P(3)return aZ elseif aE==14 then if unicode.len(aZ)>0 then aZ=unicode.sub(aZ,1,unicode.len(aZ)-1)P(3)a_()end elseif W~=0 then aZ=aZ..unicode.char(W)P(3)a_()end elseif aC=="clipboard"and aD==a7 then aZ=aZ..W;if unicode.sub(W,unicode.len(W),unicode.len(W))=="\n"then P(3)return unicode.sub(aZ,1,unicode.len(aZ)-1)end elseif aC=="touch"and aD==a6 then if#aZ==0 then P(3)return""end end end end;local function b1()F("garbage collection")for V=1,5 do computer.pullSignal(0.1)end end;local function b2(aD)if not aD then return nil end;return aD:sub(1,6)end;local function b3(b4,b5)local b6,b7=b4.open(b5)if not b6 then return nil,b7 end;local aZ=""while true do local b8=b4.read(b6,math.huge)if not b8 then break end;aZ=aZ..b8 end;b4.close(b6)return aZ end;local function b9(b4,b5,_)local b6,b7=b4.open(b5,"w")if not b6 then return nil,b7 end;b4.write(b6,_)b4.close(b6)return true end;local function ba(j)local bb=component.proxy(j)return bb.exists("/init.lua")or bb.exists("/OS.lua")end;local function bc(j)return e({b2(j),component.proxy(j).getLabel()},":")end;local function bd(au,aD,be,bf,bg)local _={n={},a={}}for j in component.list("filesystem")do if not bf or ba(j)then _.n[#_.n+1]=bc(j)_.a[#_.a+1]=j end end;if be then _.n[#_.n+1]="clear"end;_.n[#_.n+1]="back"local Q=1;if not bg then if type(aD)=="number"then Q=aD elseif type(aD)=="string"then for V=1,#_.a do if _.a[V]==aD then Q=V;break end end end else Q=#_.n-1 end;local aw=at(au,_.n,Q)local j=_.a[aw]if not j then if aw==#_.n then return nil elseif aw==#_.n-1 then return false end end;return j end;local function bh(aZ,bi,bj,bk)if not bk then bk=0 end;if bj then D()else C()end;computer.getBootScreen=function()return a6 end;computer.getBootGpu=function()if a6 then return ad end;return nil end;b1()F(bi)P(1)E=true;assert(xpcall(assert(load(aZ,"=boot")),h))E=false;C()if bk==0 then f()elseif bk==1 then return elseif bk==2 then f(true)end;error("return code is not found")end;local function bl(j)local b4,aZ=component.proxy(j)if b4.exists("/init.lua")then computer.getBootAddress=function()return j end;computer.setBootAddress=function(j)pcall(a2,1,j)end;aZ=b3(b4,"/init.lua")elseif b4.exists("/OS.lua")then w.getData=j;w.setData=function(j)pcall(a2,1,j)end;aZ=b3(b4,"/OS.lua")else error("boot file not found")end;bh(aZ,"booting to drive: "..b2(j).."...")end;local function bm()if a6 then local bn=tonumber(a0(2))local bo=tonumber(a0(3))if bn and bo and pcall(a5.setResolution,bn,bo)then a8,a9=bn,bo else a8,a9=a5.maxResolution()a5.setResolution(a8,a9)end end end;bm()local function bp(bq)if not t then return nil,"internet card is not found"end;local br,_,bs,bt=t.request(bq),""if br then while true do bs,bt=br.read(mathHuge)if bs then _=_..bs else br.close()if bt then return nil,bt else return _ end end end else return nil,"unvalid address"end end;local function bu(bv)if not t then if not bv then aW("internet card is not found")end;return true end end;local function bw(aq)local _=a0(8)if _==""then return true end;local bx=aX("password"..(aq and" to "..aq or""),true)if bx==""then return nil end;return _==bx end;local function by(j)a2(10,j)ao(0,0)a6=j;a5.bind(j)bm()ao(0,0)a7=v(j,"getKeyboards")[1]aa=a5.getDepth()end;local function bz(...)local bA=""for V,_ in ipairs(R(...))do bA=_ end;return bA end;local function bB(bq)return R(R(bq,"//")[2],"/")[1]..":"..bz(bq,"/")end;local function bC(S)return bz(S,"/"):match("[^.%.]+")end;if a0(4)=="true"then w={}end;local function bD()local bg;while true do local j=bd("select",a0(1),true,true,bg)bg=nil;if j then a2(1,j)elseif j==false then a2(1,"")bg=true else return end end end;local function bE()local j=bd("fastboot",nil,nil,true)if j then bl(j)end end;local function bF(bG,bj)if bu()then return end;local bq=bG;if not bq then bq=aX("url")if bq==""then return end end;local aZ,b7=bp(bq)if not aZ then aW(b7 or"unkown")return end;computer.getBootUrl=function()return bq end;bh(aZ,"booting to url: "..bB(bq).."...",bj,1)end;local function bH()local Q=1;while true do if bu()then return end;local aZ,b7=bp("https://raw.githubusercontent.com/igorkll/webMarket/main/filelist.txt")if not aZ then aW(b7 or"unkown")return end;local bI,bJ,bK,bL=R(aZ,"\n"),{},{},{}for V=1,#bI do local H=bI[V]if H then local bM,y,bN=a(R(H,";"))if bM and y then bJ[#bJ+1]=bC(y)bK[#bK+1]=bM;bL[#bL+1]=bN=="true"end end end;bJ[#bJ+1]="back"Q=at("web apps",bJ,Q)local bM=bK[Q]if not bM then return end;bF(bM,not bL[Q])end end;local function bO()local av={"80x25","50x16","25x8","64x32","40x20","32x16","20x10","clear","back"}local aw=1;while true do aw=at("resolution",av,aw)if aw==8 then a2(2,"")a2(3,"")bm()elseif aw==9 then return else local bO=R(av[aw],"x")a2(2,tostring(bO[1]))a2(3,tostring(bO[2]))bm()end end end;local function bP(bv)if bu(bv)then return end;F("downloading the update file")local b6,b7=bp("https://raw.githubusercontent.com/igorkll/topBiosV5/main/biosv7.bin")if not b6 then if not bv then aW(b7 or"unkown")end;return end;if b6~=v(s,"get")then if aO("update?")then X()v(s,"set",b6)f(true)end else if not bv then aW("update not found")end end end;local function bQ()while true do local bR=bw("open password cfg")if bR==nil then return end;if bR then break end end;local aw=1;while true do aw=at("password",{"set","reset","set a menu","set a boot","back"},aw)if aw==1 then local bS=aX("new password",true)if bS~=""then a2(8,bS)if a0(9)==""then a2(9,"menu")end end elseif aw==2 then a2(8,"")elseif aw==3 then a2(9,"menu")elseif aw==4 then a2(9,"boot")elseif aw==5 then return end end end;local function bT()while true do local b8=aX("lua")if b8==""then return end;local aE,b7=load(b8,nil,"=lua")if not aE then aW(tostring(b7 or"unkown"))else local bR,b7=pcall(aE)aW(tostring(b7 or"nil"))end end end;local function bU()local bV="/topBios/utilities/"local bW={}for j in component.list("filesystem")do local bb=component.proxy(j)if bb.exists(bV)then for V,_ in ipairs(bb.list(bV))do local bX=bV.._;c(bW,{j,bX})end end end;local av={}for V,_ in ipairs(bW)do c(av,bc(_[1])..":"..bC(_[2]))end;c(av,"back")local Q=at("select utility",av)if Q>#bW then return end;local bY=bW[Q]local aZ=b3(component.proxy(bY[1]),bY[2])computer.getBootAddress=function()return bY[1]end;computer.getBootPath=function()return bY[2]end;bh(aZ,"booting to utility: "..av[Q].."...",false,1)end;local function bZ()local function b_()local function c0(j)if component.proxy(j).isReadOnly()then aW("this drive("..bc(j)..")is read only")return true end end;local function c1(j)if c0(j)then return end;local b8=aX("new name")if b8~=""then F("renaming...")component.proxy(j).setLabel(b8)end end;local function c2(j)if c0(j)then return end;if aO("erase label?")then F("renaming...")component.proxy(j).setLabel(nil)end end;local function c3(j)if c0(j)then return end;if aO("format? "..bc(j))then F("formatting...")component.proxy(j).remove("/")end end;local function c4(j,c5)local c6=c5 and"install"or"clone"local c7=j;local c8=bd(c6 .." to?")if c7==c8 then aW("drive equals")return end;if not c8 or c0(c8)then return end;if aO(c6 .." from "..bc(c7).." to "..bc(c8).."?")then if c5 then F("installing...")else F("cloning...")end;c7=component.proxy(c7)c8=component.proxy(c8)if not c5 then c8.remove("/")end;local function c9(b5)local _=""for ca in b5:gmatch("[^/\\]+")do _=ca end;return _ end;local function cb(cc,cd,b5,c5)for aU,_ in ipairs(cc.list(b5))do local bX=b5 .._;if c9(bX):sub(1,1)~="."or not c5 then if cc.isDirectory(bX)then cd.makeDirectory(bX)cb(cc,cd,bX,c5)else assert(b9(cd,bX,assert(b3(cc,bX))))end end end end;cb(c7,c8,"/",c5)end end;local function ce(j)local cf=component.proxy(j)local cg=a9//2-3;ao()ap("label: "..tostring(cf.getLabel()),cg)ap("address: "..tostring(b2(j)),cg+1)ap("total space: "..tostring(math.floor(cf.spaceTotal()/1024)).."k",cg+2)ap("total used: "..tostring(math.floor(cf.spaceUsed()/1024)).."k",cg+3)ap("is read only: "..tostring(cf.isReadOnly()),cg+4)ap("is bootable: "..tostring(ba(cf.address)),cg+5)aS(cg+6,true)end;local ch;while true do ch=bd("select drive",ch)if not ch then return end;aI(function()return"selected drive: "..bc(ch)end,{"rename","erase label","format","install","clone","info"},{c1,c2,c3,c4,c4,ce},{{ch},{ch},{ch},{ch,true},{ch},{ch}})end end;local bR,b7=pcall(b_)if not bR then aW(b7 or"unkown")end end;local function ci()local av={}local cj={}local Q=1;local U=0;for j in component.list("screen")do U=U+1;if j==a0(10)then Q=U end;table.insert(cj,j)table.insert(av,b2(j))end;table.insert(av,"back")while true do Q=at("monitors",av,Q)local j=cj[Q]if not j then if Q==#av then return end else by(j)end end end;local function ck()local aQ=aO("set sound state",true,O)O=aQ;a2(11,aQ and"1"or"0")end;local function cl()ao()local bo=a9//2-9//2;local S=b2(a0(1))if not S or S==""then S="null"end;ap("boot filesystem: "..S,bo)ap("total memory: "..tostring(math.floor(computer.totalMemory()/1024)).."k",bo+2)ap("free memory: "..tostring(math.floor(computer.freeMemory()/1024)).."k",bo+3)ap("used memory: "..tostring(math.floor((computer.totalMemory()-computer.freeMemory())/1024)).."k",bo+4)local cm=0;for j,l in component.list()do cm=cm+1 end;ap("components count: "..tostring(math.floor(cm)),bo+6)aS(bo+8,true)end;local function cn()aI("settings",{"resolution","password","monitor","sound"},{bO,bQ,ci,ck})end;local function co()aI("apps",{"fastboot","internet boot","bios update","lua","disk manager","web market","run utility","system info"},{bE,bF,bP,bT,bZ,bH,bU,cl})end;local function cp()while a0(9)=="menu"do local bR=bw("open bios menu")if bR==nil then return end;if bR then break end end;aI("top bios v7",{"select","apps","settings","shutdown","reboot"},{bD,co,cn,f,f},{nil,nil,nil,nil,{true}})end;b1()while a0(9)=="boot"do local bR=bw("boot")if bR==nil then f()end;if bR then break end end;if a0(4)=="true"then computer.beep(1800)aW("bios runned in dev mode")end;if not aR()then F("hello")if not P(0)and a6 then I(1)end end;local cq=false::cr::local cs=a0(1)if cs~=""and(not component.proxy(cs)or not ba(cs))then a2(1,"")end;if aR()then::ct::ao()a5.setForeground(af(0xFF0000,nil,true))a5.setBackground(af(0xFFFFFF,nil,false))local bo=a9//2-3;ap("TOP BIOS V7",bo)a5.setForeground(af(0x888888,0xAAAAAA,false))a5.setBackground(0xFFFFFF)local S=b2(a0(1))if not S or S==""then S="null"end;local cu,cv=ap("alt-menu",bo+1)local cw,cx=ap("enter-boot",bo+2)ap("boot filesystem: "..S,bo+3)ap("total memory: "..tostring(math.floor(computer.totalMemory()/1024)).."k",bo+4)ap("free memory: "..tostring(math.floor(computer.freeMemory()/1024)).."k",bo+5)ap("used memory: "..tostring(math.floor((computer.totalMemory()-computer.freeMemory())/1024)).."k",bo+6)if not cq then P(0)cq=true end;for V=1,50 do local aC,aD,as,aE,aF=computer.pullSignal(0.1)if aC=="key_down"and aD==a7 then if aE==56 then P(3)cp()goto ct elseif aE==28 then P(3)break end elseif aC=="touch"and aD==a6 and aF==0 then if aE==bo+1 and as>=cu and as<=cv then P(3)cp()goto ct elseif aE==bo+2 and as>=cw and as<=cx then P(3)break end end end end;if not component.proxy(a0(1))then F("search for a bootable file",0.3)for j in component.list("filesystem")do if ba(j)then F("installed as a bootable: "..b2(j))a2(1,j,true)break end end end;if not component.proxy(a0(1))then F("boot file in not found",0.3)computer.pullSignal(0)goto cr end;bl(a0(1))