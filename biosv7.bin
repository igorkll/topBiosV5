local a,b,c,d,e,component,error,xpcall,assert,f,checkArg,pairs,type,g,h=table.unpack,computer.pullSignal,table.insert,string.sub,table.concat,component,error,xpcall,assert,computer.shutdown,checkArg,pairs,type,table.unpack,debug.traceback;local function i(j)return tonumber(computer.getDeviceInfo()[j].width)or false end;local function k(l)local m=0;local n=nil;local o=false;while true do o=false;for j,p in component.list(l)do if l==p then local q=i(j)if not q then n=j elseif q>m then m=q;n=j;o=true;break end end end;if not o then return component.proxy(n or"")end end end;local r=k("eeprom")local s=r.address;local t=k("internet")local u=k("beep")local v=component.invoke;computer.setArchitecture=nil;local w={makeReadonly=false,get="",set={nil,"storage is readonly"},setData={nil,"storage is readonly"},getData="",getChecksum="",setLabel={nil,"storage is readonly"},getLabel=""}local function x(j,y,...)checkArg(1,j,"string")checkArg(2,y,"string")if j==r.address then for z,A in pairs(w)do if z==y then local B=type(A)if B=="table"then return g(A)elseif B=="function"then return A(...)else return A end end end;return v(j,y,...)else return v(j,y,...)end end;local function C()component.invoke=x end;local function D()component.invoke=v end;C()local E,F=false;computer.pullSignal=function(G)local H={b(G)}if not E and H[1]=="component_removed"and H[2]==s and H[3]=="eeprom"then f()end;return a(H)end;local function I(G)local J=computer.uptime()while computer.uptime()-J<G do computer.pullSignal(0)end end;local function K(L,M,N)if u then u.beep({[L]=M})if N then I(M)end else computer.beep(L,M)end end;local O;local function P(Q)if E or not O then return false end;if Q==0 then K(1600,0.05,true)K(1400,0.05,true)K(1400,0.05,true)K(1600,0.05)elseif Q==1 then K(1000,0.2)elseif Q==2 then K(1333,0.05,true)K(1333,0.05)elseif Q==3 then K(2000,0.01)end;return true end;local function R(S,T)local parts,U={},1;local V=1;while true do if V>#S then break end;local W=d(S,V,#T+V-1)if not parts[U]then parts[U]=""end;if W==T then U=U+1;V=V+#T else parts[U]=parts[U]..d(S,V,V)V=V+1 end end;if d(S,#S-(#T-1),#S)==T then c(parts,"")end;return parts end;local function X()F("writing to eeprom")P(2)end;local function Y()return v(s,"getData")end;local function Z(_)v(s,"setData",_)end;local function a0(a1)return R(Y(),"\n")[a1]or""end;local function a2(a1,a3,a4)if a0(a1)==a3 then return end;if not E and not a4 then X()end;if a3:find("\n")then error("\\n char")end;parts=R(Y(),"\n")for V=a1,1,-1 do if not parts[V]then parts[V]=""end end;parts[a1]=a3;Z(e(parts,"\n"))end;O=a0(11)~="0"local a5=k("gpu")local a6;local a7;local a8,a9,aa;local function ab()a5={}setmetatable(a5,{__index=function()error("gpu and screen required")end})end;if not a5 then ab()else if not component.proxy(a0(10))then local a6=k("screen")if a6 then a2(10,a6.address,true)end end;a6=a0(10)local ac=component.proxy(a6)if ac then a5.bind(a6)a8,a9=a5.getResolution()aa=a5.getDepth()a7=v(a6,"getKeyboards")[1]if ac.setPrecise then pcall(ac.setPrecise,false)end else a6=nil;ab()end end;local ad;if a6 then ad=a5.address end;local function ae()return aa~=1 end;local function af(ag,ah,ai)if not ah then ah=ag end;if aa~=1 then if aa==4 then return ah else return ag end else return ai and 0xFFFFFF or 0 end end;local function aj()a5.setForeground(a5.setBackground(a5.getForeground()))end;local function ak()a5.fill(1,1,a8,a9," ")end;local function al(am,an)a5.setBackground(am or 0xFFFFFF)a5.setForeground(an or 0)end;local function ao(am,an)al(am,an)ak()end;local function ap(aq,ar)a5.set(math.ceil(a8/2-unicode.len(aq)/2),ar,aq)end;local function as(at,au,Q)local av=Q or 1;local ar=a9//2-#au//2-1;if ar<0 then ar=0 end;while true do ao()local aw=av//a9*a9;local ax=ar;if aw==0 then if not ae()then aj()end;ap(at,1+ax)if not ae()then aj()end else ax=0 end;al(nil,af(0x888888,0xAAAAAA,false))for V=1,#au do local ay=V+1+ax-aw;if ay>=1 and ay<=a9 then if a7 and av==V then aj()end;ap(au[V],ay)if a7 and av==V then aj()end end end::az::local aA=false;local aB,aC,aD,aE,aF=computer.pullSignal()if aB=="key_down"and aC==a7 then if aE==200 and av>1 then av=av-1;aA=true end;if aE==208 and av<#au then av=av+1;aA=true end;if aE==28 then P(3)return av end elseif aB=="touch"and aC==a6 and aF==0 then aE=aE+aw-ax;aE=aE-1;if aE>=1 and aE<=#au then local aq=au[aE]local aG,aH=math.ceil(a8/2-unicode.len(aq)/2)aH=aG+unicode.len(aq)-1;if aD>=aG and aD<=aH then P(3)return aE end end elseif aB=="scroll"and aC==a6 then if aF==1 and av>1 then av=av-1;aA=true end;if aF==-1 and av<#au then av=av+1;aA=true end end;if not aA then goto az else P(3)end end end;local function aI(at,au,aJ,aK,Q)au[#au+1]="back"local Q=Q or 1;while true do local aL=at;if type(at)=="function"then aL=at()end;Q=as(aL,au,Q)if Q==#au then return end;local aM={}if aK and aK[Q]then aM=aK[Q]end;aJ[Q](table.unpack(aM))end end;local function aN(at,aO,aP)if aO then return as(at,{"no","yes"},aP and 2 or 1)==2 else return as(at,{"no","no","yes","no"},aP and 3 or 1)==3 end end;local function aQ()return a6 and(a7 or math.floor(computer.getDeviceInfo()[a6].width)~=1)end;local function aR(ar)a5.set(1,ar,"press enter or touch to continue...")while true do local aB,aC,aS,aE=computer.pullSignal()if aB=="key_down"and aC==a7 then if aE==28 then break end elseif aB=="touch"and aC==a6 then break end end;P(3)end;function F(S,aT)if not a6 then return end;ao()ap(S,a9//2)if aT then I(aT)end end;local function aU(S)if not a6 then return end;if not aQ()then F(S,1)return end;ao()a5.set(1,1,S)aR(2)end;local function aV(aD,ar,aW)if not a7 then aU("keyboard is not found, touch to cancel input")return""end;local aX=""while true do a5.set(aD,ar,"_")local aB,aC,W,aE=computer.pullSignal()if aB=="key_down"and aC==a7 then if aE==28 then P(3)return aX elseif aE==14 then if unicode.len(aX)>0 then aX=unicode.sub(aX,1,unicode.len(aX)-1)a5.set(aD,ar," ")aD=aD-1;a5.set(aD,ar," ")P(3)end elseif W~=0 then aX=aX..unicode.char(W)a5.set(aD,ar,aW and"*"or unicode.char(W))aD=aD+1;P(3)end elseif aB=="clipboard"and aC==a7 then aX=aX..W;a5.set(aD,ar,W)aD=aD+unicode.len(W)if unicode.sub(W,unicode.len(W),unicode.len(W))=="\n"then P(3)return unicode.sub(aX,1,unicode.len(aX)-1)end elseif aB=="touch"and aC==a6 then if#aX==0 then return""end end end end;local function aY(aq,aW)ao()a5.set(1,1,aq..": ")return aV(unicode.len(aq)+3,1,aW)end;local function aZ()F("garbage collection")for V=1,5 do computer.pullSignal(0.1)end end;local function a_(aC)if not aC then return nil end;return aC:sub(1,6)end;local function b0(b1,b2)local b3,b4=b1.open(b2)if not b3 then return nil,b4 end;local aX=""while true do local b5=b1.read(b3,math.huge)if not b5 then break end;aX=aX..b5 end;b1.close(b3)return aX end;local function b6(b1,b2,_)local b3,b4=b1.open(b2,"w")if not b3 then return nil,b4 end;b1.write(b3,_)b1.close(b3)return true end;local function b7(j)local b8=component.proxy(j)return b8.exists("/init.lua")or b8.exists("/OS.lua")end;local function b9(j)return e({a_(j),component.proxy(j).getLabel()},":")end;local function ba(at,aC,bb,bc,bd)local _={n={},a={}}for j in component.list("filesystem")do if not bc or b7(j)then _.n[#_.n+1]=b9(j)_.a[#_.a+1]=j end end;if bb then _.n[#_.n+1]="clear"end;_.n[#_.n+1]="back"local Q=1;if not bd then if type(aC)=="number"then Q=aC elseif type(aC)=="string"then for V=1,#_.a do if _.a[V]==aC then Q=V;break end end end else Q=#_.n-1 end;local av=as(at,_.n,Q)local j=_.a[av]if not j then if av==#_.n then return nil elseif av==#_.n-1 then return false end end;return j end;local function be(aX,bf,bg,bh)if not bh then bh=0 end;if bg then D()else C()end;computer.getBootScreen=function()return a6 end;computer.getBootGpu=function()if a6 then return ad end;return nil end;aZ()F(bf)P(1)E=true;assert(xpcall(assert(load(aX,"=boot")),h))E=false;C()if bh==0 then f()elseif bh==1 then return elseif bh==2 then f(true)end;error("return code is not found")end;local function bi(j)local b1,aX=component.proxy(j)if b1.exists("/init.lua")then computer.getBootAddress=function()return j end;computer.setBootAddress=function(j)pcall(a2,1,j)end;aX=b0(b1,"/init.lua")elseif b1.exists("/OS.lua")then w.getData=j;w.setData=function(j)pcall(a2,1,j)end;aX=b0(b1,"/OS.lua")else error("boot file not found")end;be(aX,"booting to drive: "..a_(j).."...")end;local function bj()if a6 then local bk=tonumber(a0(2))local bl=tonumber(a0(3))if bk and bl and pcall(a5.setResolution,bk,bl)then a8,a9=bk,bl else a8,a9=a5.maxResolution()a5.setResolution(a8,a9)end end end;bj()local function bm(bn)if not t then return nil,"internet card is not found"end;local bo,_,bp,bq=t.request(bn),""if bo then while true do bp,bq=bo.read(mathHuge)if bp then _=_..bp else bo.close()if bq then return nil,bq else return _ end end end else return nil,"unvalid address"end end;local function br(bs)if not t then if not bs then aU("internet card is not found")end;return true end end;local function bt(aq)local _=a0(8)if _==""then return true end;local bu=aY("password"..(aq and" to "..aq or""),true)if bu==""then return nil end;return _==bu end;local function bv(j)a2(10,j)ao(0,0)a6=j;a5.bind(j)bj()ao(0,0)a7=v(j,"getKeyboards")[1]aa=a5.getDepth()end;local function bw(...)local bx=""for V,_ in ipairs(R(...))do bx=_ end;return bx end;local function by(bn)return R(R(bn,"//")[2],"/")[1]..":"..bw(bn,"/")end;local function bz(S)return bw(S,"/"):match("[^.%.]+")end;if a0(4)=="true"then w={}end;local function bA()local bd;while true do local j=ba("select",a0(1),true,true,bd)bd=nil;if j then a2(1,j)elseif j==false then a2(1,"")bd=true else return end end end;local function bB()local j=ba("fastboot",nil,nil,true)if j then bi(j)end end;local function bC(bD,bg)if br()then return end;local bn=bD;if not bn then bn=aY("url")if bn==""then return end end;local aX,b4=bm(bn)if not aX then aU(b4 or"unkown")return end;computer.getBootUrl=function()return bn end;be(aX,"booting to url: "..by(bn).."...",bg,1)end;local function bE()local Q=1;while true do if br()then return end;local aX,b4=bm("https://raw.githubusercontent.com/igorkll/webMarket/main/filelist.txt")if not aX then aU(b4 or"unkown")return end;local bF,bG,bH,bI=R(aX,"\n"),{},{},{}for V=1,#bF do local H=bF[V]if H then local bJ,y,bK=a(R(H,";"))if bJ and y then bG[#bG+1]=bz(y)bH[#bH+1]=bJ;bI[#bI+1]=bK=="true"end end end;bG[#bG+1]="back"Q=as("web apps",bG,Q)local bJ=bH[Q]if not bJ then return end;bC(bJ,not bI[Q])end end;local function bL()local au={"80x25","50x16","25x8","64x32","40x20","32x16","20x10","clear","back"}local av=1;while true do av=as("resolution",au,av)if av==8 then a2(2,"")a2(3,"")bj()elseif av==9 then return else local bL=R(au[av],"x")a2(2,tostring(bL[1]))a2(3,tostring(bL[2]))bj()end end end;local function bM(bs)if br(bs)then return end;F("downloading the update file")local b3,b4=bm("https://raw.githubusercontent.com/igorkll/topBiosV5/main/biosv7.bin")if not b3 then if not bs then aU(b4 or"unkown")end;return end;if b3~=v(s,"get")then if aN("update?")then X()v(s,"set",b3)f(true)end else if not bs then aU("update not found")end end end;local function bN()while true do local bO=bt("open password cfg")if bO==nil then return end;if bO then break end end;local av=1;while true do av=as("password",{"set","reset","set a menu","set a boot","back"},av)if av==1 then local aV=aY("new password",true)if aV~=""then a2(8,aV)if a0(9)==""then a2(9,"menu")end end elseif av==2 then a2(8,"")elseif av==3 then a2(9,"menu")elseif av==4 then a2(9,"boot")elseif av==5 then return end end end;local function bP()while true do ao()a5.set(1,1,"lua: ")local b5=aV(6,1)if b5==""then return end;local aE,b4=load(b5,nil,"=lua")if not aE then aU(b4 or"unkown")else local bO,b4=pcall(aE)aU(tostring(b4 or"nil"))end end end;local function bQ()local bR="/topBios/utilities/"local bS={}for j in component.list("filesystem")do local b8=component.proxy(j)if b8.exists(bR)then for V,_ in ipairs(b8.list(bR))do local bT=bR.._;c(bS,{j,bT})end end end;local au={}for V,_ in ipairs(bS)do c(au,b9(_[1])..":"..bz(_[2]))end;c(au,"back")local Q=as("select utility",au)if Q>#bS then return end;local bU=bS[Q]local aX=b0(component.proxy(bU[1]),bU[2])computer.getBootAddress=function()return bU[1]end;computer.getBootPath=function()return bU[2]end;be(aX,"booting to utility: "..au[Q].."...",false,1)end;local function bV()local function bW()local function bX(j)if component.proxy(j).isReadOnly()then aU("this drive("..b9(j)..")is read only")return true end end;local function bY(j)if bX(j)then return end;ao()a5.set(1,1,"new name: ")local b5=aV(11,1)if b5~=""then F("renaming...")component.proxy(j).setLabel(b5)end end;local function bZ(j)if bX(j)then return end;if aN("erase label?")then F("renaming...")component.proxy(j).setLabel(nil)end end;local function b_(j)if bX(j)then return end;if aN("format? "..b9(j))then F("formatting...")component.proxy(j).remove("/")end end;local function c0(j,c1)local c2=c1 and"install"or"clone"local c3=j;local c4=ba(c2 .." to?")if c3==c4 then aU("drive equals")return end;if not c4 or bX(c4)then return end;if aN(c2 .." from "..b9(c3).." to "..b9(c4).."?")then if c1 then F("installing...")else F("cloning...")end;c3=component.proxy(c3)c4=component.proxy(c4)if not c1 then c4.remove("/")end;local function c5(b2)local _=""for c6 in b2:gmatch("[^/\\]+")do _=c6 end;return _ end;local function c7(c8,c9,b2,c1)for aS,_ in ipairs(c8.list(b2))do local bT=b2 .._;if c5(bT):sub(1,1)~="."or not c1 then if c8.isDirectory(bT)then c9.makeDirectory(bT)c7(c8,c9,bT,c1)else assert(b6(c9,bT,assert(b0(c8,bT))))end end end end;c7(c3,c4,"/",c1)end end;local function ca(j)local cb=component.proxy(j)ao()a5.set(1,1,"label: "..tostring(cb.getLabel()))a5.set(1,2,"address: "..tostring(a_(j)))a5.set(1,3,"total space: "..tostring(math.floor(cb.spaceTotal()/1024)).."k")a5.set(1,4,"total used: "..tostring(math.floor(cb.spaceUsed()/1024)).."k")a5.set(1,5,"is read only: "..tostring(cb.isReadOnly()))a5.set(1,6,"is bootable: "..tostring(b7(cb.address)))aR(7)end;local cc;while true do cc=ba("select drive",cc)if not cc then return end;aI(function()return"selected drive: "..b9(cc)end,{"rename","erase label","format","install","clone","info"},{bY,bZ,b_,c0,c0,ca},{{cc},{cc},{cc},{cc,true},{cc},{cc}})end end;local bO,b4=pcall(bW)if not bO then aU(b4 or"unkown")end end;local function cd()local au={}local ce={}local Q=1;local U=0;for j in component.list("screen")do U=U+1;if j==a0(10)then Q=U end;table.insert(ce,j)table.insert(au,a_(j))end;table.insert(au,"back")while true do Q=as("monitors",au,Q)local j=ce[Q]if not j then if Q==#au then return end else bv(j)end end end;local function cf()local aP=aN("set sound state",true,O)O=aP;a2(11,aP and"1"or"0")end;local function cg()aI("settings",{"resolution","password","monitor","sound"},{bL,bN,cd,cf})end;local function ch()aI("apps",{"fastboot","internet boot","bios update","lua","disk manager","web market","run utility"},{bB,bC,bM,bP,bV,bE,bQ})end;local function ci()while a0(9)=="menu"do local bO=bt("open bios menu")if bO==nil then return end;if bO then break end end;aI("top bios v7",{"select","apps","settings","shutdown","reboot"},{bA,ch,cg,f,f},{nil,nil,nil,nil,{true}})end;aZ()while a0(9)=="boot"do local bO=bt("boot")if bO==nil then f()end;if bO then break end end;if a0(4)=="true"then computer.beep(1800)aU("bios runned in dev mode")end;if not aQ()then F("hello")if not P(0)and a6 then I(1)end end;local cj=false::ck::local cl=a0(1)if cl~=""and(not component.proxy(cl)or not b7(cl))then a2(1,"")end;if aQ()then::cm::ao()a5.setForeground(af(0xFF0000,nil,true))a5.setBackground(af(0xFFFFFF,nil,false))a5.set(1,1,"TOP BIOS V7")a5.setForeground(af(0x888888,0xAAAAAA,false))a5.setBackground(0xFFFFFF)local S=a_(a0(1))if not S or S==""then S="null"end;a5.set(1,2,"boot: "..S)a5.set(1,3,"alt-menu")a5.set(1,4,"enter-boot")if not cj then P(0)cj=true end;for V=1,50 do local aB,aC,aD,aE,aF=computer.pullSignal(0.1)if aB=="key_down"and aC==a7 then if aE==56 then P(3)ci()goto cm elseif aE==28 then P(3)break end elseif aB=="touch"and aC==a6 and aF==0 then if aE==3 and aD<=8 then P(3)ci()goto cm elseif aE==4 and aD<=10 then P(3)break end end end end;if not component.proxy(a0(1))then F("search for a bootable file",0.3)for j in component.list("filesystem")do if b7(j)then F("installed as a bootable: "..a_(j))a2(1,j,true)break end end end;if not component.proxy(a0(1))then F("boot file in not found",0.3)computer.pullSignal(0)goto ck end;bi(a0(1))